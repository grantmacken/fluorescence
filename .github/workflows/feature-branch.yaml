name: development-features
on:
  push:
    branches:
      - 'workflow'
      - 'feature/*'
      - '!master'
      - 'certbot/init'
env:
  ghSha: ${{ github.sha }}
  ghToken: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
          fetch-depth: 1
    - name: Set environment variables
      run: |
          source .env
          echo '::set-env name=TERM::xterm'
    - name: Pull in my docker images
      run: |
          #source .env
          # docker login docker.pkg.github.com --username ${REPO_OWNER} --password ${{ secrets.github_token }} &>/dev/null
          echo ' - pull in main docker images'
          make pull-pkgs
    - name: untar data  into 'xqerl database' volume
      run: |
        make db-tar-deploy
        docker volume list
    - name: Bring up the xqerl container
      run: |
          echo ' starting xqerl will also: '
          echo ' - create the all the volumes we require for xqerl and the nginx proxy'
          echo ' - create the network we require'
          make xq-up
          docker volume list
          make xq-info
    - name: build compiled xQuery files to run on the beam, then put into 'xqerl-compiled-code' volume
      run: |
          make code
          echo ' - check what we have running on the beam'
          make xq-info-more
          make check-xq-routes-more
    - name: Create xqerl-compiled-code artifact
      uses: actions/upload-artifact@v2
      with:
        name: xqerl-compiled-code
        path: deploy/xqerl-compiled-code.tar
    - name: Build 'nginx configuration files' from src files and put into 'nginx-configuration' volume
      run: |
          make ngx
          ls -al deploy
    - name: Create nginx-configuration artifact
      uses: actions/upload-artifact@v2
      with:
        name: nginx-configuration
        path: deploy/nginx-configuration.tar
    - name: Build 'static assets' from src files and put into 'static-assets' volume
      run: |
          # build the directories on *static-assets* volume
          make init-assets
          # the build artifact is the **static-assets.tar**'
          make assets
    - name: Create static-assets artifact
      uses: actions/upload-artifact@v2
      with:
        name: static-assets
        path: deploy/static-assets.tar
    - name: Setup Google Cloud Platform
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCE_PROJECT_ID }}
        service_account_key: ${{ secrets.GCE_SERVICE_ACCOUNT_KEY }}
        service_account_email: ${{ secrets.GCE_SERVICE_ACCOUNT_EMAIL }}
        export_default_credentials: true
    - name: Fetch certs and put into 'letsencypt' volume on 'github-actions' host
      run: |
          make gc-init
          make certs-into-vol
