name: continuous-integration
on:
  push:
    branches:
      - main
#https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#onevent_nametypes
# environment variables available to all jobs and steps in this workflow
env:
  ghSha: ${{ github.sha }}
  ghToken: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
          fetch-depth: 1
    - name: Pull in my docker images
      run: echo '::set-env name=TERM::xterm' && make pull-pkgs
    - name: Put xqerl escripts into 'xqerl-escripts' volume
      run: make escript
    - name: Create xqerl-escripts artifact
      uses: actions/upload-artifact@v2
      with:
        name: xqerl-escripts
        path: deploy/xqerl-escripts.tar
    - name: Untar data  into 'xqerl database' volume
      run: make xqerl-database-tar-deploy
    - name: Create xqerl-database artifact
      uses: actions/upload-artifact@v2
      with:
        name: xqerl-database
        path: deploy/xqerl-database.tar
    - name: Bring up the xqerl container
      run: make xq-up && make xq-info
    - name: Build compiled xQuery files to run on the beam, then put into 'xqerl-compiled-code' volume
      run: make code
    - name: Check xq running xqerl on the 'github actions' host
      run: make xq-info-more
    - name: Reachable routes - use curl to check restXQ resolvable routes.
      run: make check-xq-routes
          # note if restXQ routes checkout OK then
          # routes to statis assets will not resolve as they rely on the proxy
    - name: Create xqerl-compiled-code artifact
      uses: actions/upload-artifact@v2
      with:
        name: xqerl-compiled-code
        path: deploy/xqerl-compiled-code.tar
    - name: Build 'static assets' from src files and put into 'static-assets' volume
      run: make init-assets && make assets
    - name: Create static-assets artifact
      uses: actions/upload-artifact@v2
      with:
        name: static-assets
        path: deploy/static-assets.tar
    - name: Build 'nginx configuration files' from src files and put into 'nginx-configuration' volume
      run: make ngx
    - name: Create nginx-configuration artifact
      uses: actions/upload-artifact@v2
      with:
        name: nginx-configuration
        path: deploy/nginx-configuration.tar
    - name: Setup Google Cloud Platform
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCE_PROJECT_ID }}
        service_account_key: ${{ secrets.GCE_SERVICE_ACCOUNT_KEY }}
        service_account_email: ${{ secrets.GCE_SERVICE_ACCOUNT_EMAIL }}
        export_default_credentials: true
    - name: Fetch certs and put into 'letsencypt' volume on 'github-actions' host
      run: |
          make gc-init
          # we need certs to run proxy tests
          make certs-into-vol
    - name: TODO CURL TEST
      run: |
          echo 'TODO: after tests we are going to deploy'
          # tests should cover
          # - fetching static assets
          # - checking hit-miss cache
    - name: Google Compute Engine Deploy
      run: make gc-deploy-tars
# I am not sure whether untar into db volume will corrupt xqerl db
# if db io operations are occurring so I am stopping xq.
# I might even remove running 'xqerl-database' volume and replace with local volume
# If the nginx cache is working there should be no downtime as proxied
# resources will be fetched from the cache not the db.

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #         fetch-depth: 1
  #   - uses: actions/download-artifact@v2
  #   - name: Move tars into deploy dir
  #     run: |
  #         mv static-assets/* deploy/
  #         mv nginx-configuration/* deploy/
  #         mv xqerl-compiled-code/* deploy/
  #         mv xqerl-escripts/* deploy/
  #         ls -al deploy
  #   - name: Pull in my docker images
  #     run: |
  #         echo '::set-env name=TERM::xterm'
  #         make pull-xq-ngx
  #   - name: Setup Google Cloud Platform
  #     uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #     with:
  #       project_id: ${{ secrets.GCE_PROJECT_ID }}
  #       service_account_key: ${{ secrets.GCE_SERVICE_ACCOUNT_KEY }}
  #       service_account_email: ${{ secrets.GCE_SERVICE_ACCOUNT_EMAIL }}
  #       export_default_credentials: true
  #   - name: Fetch certs and put into 'letsencypt' volume on 'github-actions' host
  #     run: |
  #         make gc-init
  #         make certs-into-vol
  #         ls -al deploy
  #   - name: Untar deploy tars into volumes
  #     run: |
  #       make xqerl-database-tar-deploy
  #       make xqerl-escripts-tar-deploy
  #       make static-assets-tar-deploy
  #       make nginx-configuration-tar-deploy
  #   - name: Bring up the xqerl container named 'xq'
  #     run: make xq-up && make xq-info
  #   - name: Build compiled xQuery files to run on the beam
  #     run: make code
  #   - name: Check xq running xqerl on the 'github actions' host
  #     run: make xq-info-more
  #   - name: Reachable routes - use curl to check restXQ resolvable routes.
  #     run: make check-xq-routes
  #   - name: Bring up the proxy container named 'ngx'
  #     run: make ngx-up
  #   - name: CURL TEST

